image: atlassian/default-image:3
 
pipelines:
  default:
    - step:
          name: 'Build Docker'
          image: docker:stable
          services:
            - docker
          script:
            - docker build -t jabrotsos/vuln-container:1.0 .
            - docker build -t vulnerabledockerhub/app-java-demo:114 .
            - docker login -u $DOCKER_USERNAME -p $DOCKER_PASS
            #- docker login -u $FUTURE_DOCKER_USERNAME -p $FUTURE_DOCKER_PASS
            - docker push jabrotsos/vuln-container:1.0
            - docker push vulnerabledockerhub/app-java-demo:114
  
    - step:
          name: 'MSDO trivy test'
          script:
            - curl -L -o ./msdo_linux.zip https://www.nuget.org/api/v2/package/Microsoft.Security.DevOps.Cli.linux-x64/
            - unzip ./msdo_linux.zip
            - chmod +x tools/guardian
            - chmod +x tools/Microsoft.Guardian.Cli
            - ls -lah .
            - tools/guardian init --force
            - tools/guardian run -t trivy --export-file ./ubuntu-test.sarif --publish-file-folder-path ./ubuntu-test.sarif
      
    - step:
          name: Deploy to AKS
          deployment: production
    # trigger: manual  # Uncomment to make this a manual deployment.
          script:
           - pipe: atlassian/azure-aks-deploy:1.4.0
             variables:
              AZURE_APP_ID: $AZURE_APP_ID
              AZURE_PASSWORD: $AZURE_PASSWORD
              AZURE_TENANT_ID: $AZURE_TENANT_ID
              AZURE_AKS_NAME: $AKSCLUSTER
              AZURE_RESOURCE_GROUP: $RESOURCEGROUP
              KUBECTL_COMMAND: 'apply'
              KUBECTL_ARGUMENTS: '-f deploy.yml'

#trigger: none

#variables:
#  imageName: 'runningvulnerablecontainer1'
#  tag: '$(Build.BuildId)'

#stages:
#  - stage: Build
#    displayName: 'Build and Push Image'
#    jobs:
#      - job: Build
#        displayName: 'Build'
#        pool:
#          vmImage: 'ubuntu-latest'
#        steps:
#        - task: Docker@2
#          displayName: 'Build and Push Docker image'
#          inputs:
#            containerRegistry: 'alpineRegistry'
#            repository: '$(imageName)'
#            command: 'buildAndPush'
#            Dockerfile: '**/Dockerfile'
#            tags: |
#              $(tag)
  
#  - stage: Deploy
#    displayName: 'Deploy to Kubernetes'
#    dependsOn: Build
#    condition: succeeded()
#    jobs:
#    - job: Deploy
#      displayName: 'Deploy'
#      pool:
#        vmImage: 'ubuntu-latest'
#      steps:
#      - checkout: self
      
#      - task: AzureCLI@2
#        displayName: 'Update and Deploy Deployment YAML'
#        inputs:
#          azureSubscription: 'Alpine'
#          scriptType: 'bash'
#          scriptLocation: 'inlineScript'
#          inlineScript: |
            #!/bin/bash
#            az aks get-credentials --resource-group Alpine-MDC-RG --name alpine-k8-MDC
#            fullImageName=$(containerRegistry)/$(imageName):$(tag)
#            sed -i "s|IMAGE_NAME_PLACEHOLDER|$fullImageName|g" deployment.yaml
#            kubectl apply -f deployment.yaml --validate=false
#          arguments: |
#            --containerRegistry $(containerRegistry)
#            --imageName $(imageName)
#            --tag $(tag)